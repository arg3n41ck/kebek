openapi: 3.0.3
info:
  title: Kebek Web API
  version: 1.0.0
  description: Web API for Kebek Mobile Application
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - kk
          - ru
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/addresses/cities/:
    get:
      operationId: addresses_cities_list
      description: Lists cities
      parameters:
      - in: query
        name: district
        description: ID of district.
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - addresses
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCityList'
          description: ''
  /api/v1/addresses/stations/:
    get:
      operationId: addresses_stations_list
      description: Lists railway stations
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - addresses
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRailwayStationList'
          description: ''
  /api/v1/dashboard/general/:
    get:
      operationId: dashboard_general_list
      description: Lists general info for dashboard
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - dashboard
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedElevatorGeneralList'
          description: ''
  /api/v1/dashboard/orders/:
    get:
      operationId: dashboard_orders_list
      description: Lists orders for dashboard
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - dashboard
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedElevatorOrderList'
          description: ''
  /api/v1/dashboard/profit/:
    get:
      operationId: dashboard_profit_list
      description: Lists profits for dashboard
      parameters:
      - in: query
        name: end_date
        description: End date.
        schema:
          type: string
          format: date
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: start_date
        description: Start date.
        schema:
          type: string
          format: date
      tags:
      - dashboard
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedElevatorProfitList'
          description: ''
  /api/v1/deliveries/:
    get:
      operationId: deliveries_list
      description: Lists deliveries
      parameters:
      - in: query
        name: elevator
        description: UUID of elevator.
        schema:
          type: string
          format: uuid
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: status
        description: Delivery status.
        schema:
          type: string
          enum:
          - AC
          - AR
      - in: query
        name: type
        description: ID of delivery type.
        schema:
          type: integer
      tags:
      - deliveries
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeliveryList'
          description: ''
    post:
      operationId: deliveries_create
      description: Creates deliveries
      tags:
      - deliveries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryCreate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
          description: ''
  /api/v1/deliveries/{id}/:
    get:
      operationId: deliveries_retrieve
      description: Retrieves deliveries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of delivery.
        required: true
      tags:
      - deliveries
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
          description: ''
    put:
      operationId: deliveries_update
      description: Puts deliveries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of delivery.
        required: true
      tags:
      - deliveries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryCreate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
          description: ''
    patch:
      operationId: deliveries_partial_update
      description: Patches deliveries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of delivery.
        required: true
      tags:
      - deliveries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeliveryCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeliveryCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeliveryCreate'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
          description: ''
    delete:
      operationId: deliveries_destroy
      description: Deletes deliveries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of delivery.
        required: true
      tags:
      - deliveries
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/deliveries/{id}/status/:
    patch:
      operationId: deliveries_status_partial_update
      description: Changes status of deliveries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of delivery.
        required: true
      tags:
      - deliveries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeliveryStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeliveryStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeliveryStatus'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
          description: ''
  /api/v1/deliveries/status/bulk/:
    post:
      operationId: deliveries_status_create
      description: Changes status of multiple deliveries
      tags:
      - deliveries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusIds'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StatusIds'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StatusIds'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
          description: ''
  /api/v1/deliveries/types/:
    get:
      operationId: deliveries_types_list
      description: Lists delivery types
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - deliveries
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeliveryTypeList'
          description: ''
  /api/v1/device/gcm/:
    get:
      operationId: device_gcm_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - device
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGCMDeviceList'
          description: ''
    post:
      operationId: device_gcm_create
      tags:
      - device
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCMDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GCMDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GCMDevice'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCMDevice'
          description: ''
  /api/v1/device/gcm/{registration_id}/:
    get:
      operationId: device_gcm_retrieve
      parameters:
      - in: path
        name: registration_id
        schema:
          type: string
        required: true
      tags:
      - device
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCMDevice'
          description: ''
    put:
      operationId: device_gcm_update
      parameters:
      - in: path
        name: registration_id
        schema:
          type: string
        required: true
      tags:
      - device
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCMDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GCMDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GCMDevice'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCMDevice'
          description: ''
    patch:
      operationId: device_gcm_partial_update
      parameters:
      - in: path
        name: registration_id
        schema:
          type: string
        required: true
      tags:
      - device
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGCMDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGCMDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGCMDevice'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCMDevice'
          description: ''
    delete:
      operationId: device_gcm_destroy
      parameters:
      - in: path
        name: registration_id
        schema:
          type: string
        required: true
      tags:
      - device
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/elevators/:
    get:
      operationId: elevators_list
      description: Lists elevators
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedElevatorFullList'
          description: ''
  /api/v1/elevators/{id}/:
    get:
      operationId: elevators_retrieve
      description: Retrieves elevators
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: UUID of elevator.
        required: true
      tags:
      - elevators
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElevatorFull'
          description: ''
    put:
      operationId: elevators_update
      description: Puts elevators
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: UUID of elevator.
        required: true
      tags:
      - elevators
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElevatorFull'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ElevatorFull'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ElevatorFull'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElevatorFull'
          description: ''
    patch:
      operationId: elevators_partial_update
      description: Patches elevators
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: UUID of elevator.
        required: true
      tags:
      - elevators
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedElevatorFull'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedElevatorFull'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedElevatorFull'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElevatorFull'
          description: ''
  /api/v1/elevators/no-auth/:
    get:
      operationId: elevators_no_auth_list
      description: Lists elevators for all type of users
      parameters:
      - in: query
        name: cities
        description: ID of city.
        schema:
          type: integer
        explode: true
        style: form
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - elevators
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedElevatorFullList'
          description: ''
  /api/v1/elevators/no-auth/{id}/:
    get:
      operationId: elevators_no_auth_retrieve
      description: Retrieves elevators for all type of users
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: UUID of elevator.
        required: true
      tags:
      - elevators
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElevatorFull'
          description: ''
  /api/v1/notifications/:
    get:
      operationId: notifications_list
      description: Lists notifications
      parameters:
      - in: query
        name: order_status
        description: Order status.
        schema:
          type: string
          enum:
          - AD
          - BD
          - CD
          - DD
          - FD
          - PA
          - PD
          - PP
          - SD
          - WP
          - WS
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: read
        description: Is read?
        schema:
          type: boolean
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - notifications
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
  /api/v1/notifications/{id}/:
    delete:
      operationId: notifications_destroy
      description: Deletes notifications
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of notification.
        required: true
      tags:
      - notifications
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/notifications/grouped/:
    get:
      operationId: notifications_grouped_retrieve
      description: Lists and reads notifications
      tags:
      - notifications
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationGroupedList'
          description: ''
  /api/v1/notifications/read/:
    post:
      operationId: notifications_read_create
      description: Lists and reads notifications
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationIds'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationIds'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationIds'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/notifications/unread/:
    get:
      operationId: notifications_unread_retrieve
      description: Retrieves unread notifications count
      tags:
      - notifications
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUnread'
          description: ''
  /api/v1/orders/:
    get:
      operationId: orders_list
      description: Lists orders
      parameters:
      - in: query
        name: client
        description: UUID of client.
        schema:
          type: integer
      - in: query
        name: delivery
        description: ID of delivery.
        schema:
          type: integer
      - in: query
        name: elevator
        description: UUID of elevator.
        schema:
          type: string
          format: uuid
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: payment
        description: ID of payment.
        schema:
          type: integer
      - in: query
        name: product
        description: ID of product.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        description: Status.
        schema:
          type: string
          enum:
          - AD
          - BD
          - CD
          - DD
          - FD
          - PA
          - PD
          - PP
          - SD
          - WP
          - WS
      tags:
      - orders
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
    post:
      operationId: orders_create
      description: Creates orders
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderCreate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/v1/orders/{id}/:
    get:
      operationId: orders_retrieve
      description: Retrieves orders
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of order.
        required: true
      tags:
      - orders
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSingle'
          description: ''
    put:
      operationId: orders_update
      description: Puts orders
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderPatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderPatch'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: orders_partial_update
      description: Patches orders
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderCreate'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: orders_destroy
      description: Deletes orders
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of order.
        required: true
      tags:
      - orders
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/orders/{id}/proxy/:
    patch:
      operationId: orders_proxy_partial_update
      description: Patches proxy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderProxy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderProxy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderProxy'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: orders_proxy__destroy
      description: Deletes proxy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of order.
        required: true
      tags:
      - orders
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/orders/{id}/status/:
    patch:
      operationId: orders_status_partial_update
      description: Changes status of orders
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderStatus'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/v1/orders/bulk/:
    post:
      operationId: orders_bulk_create
      description: Deletes multiple orders
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderIds'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderIds'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderIds'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/v1/orders/documents/:
    post:
      operationId: orders_documents_create
      description: Creates order documents
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentCreate'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1/orders/documents/{id}/:
    put:
      operationId: orders_documents_update
      description: Puts order documents
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of document.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentCreate'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    patch:
      operationId: orders_documents_partial_update
      description: Patches order documents
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of document.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocumentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentCreate'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: orders_documents_destroy
      description: Deletes order documents
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of document.
        required: true
      tags:
      - orders
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/orders/latest/:
    get:
      operationId: orders_latest_retrieve
      description: Lists the latest 3 orders
      tags:
      - orders
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/v1/orders/report/:
    get:
      operationId: orders_report_list
      description: Downloads orders reports
      parameters:
      - in: query
        name: client
        schema:
          type: string
          format: uuid
      - in: query
        name: delivery
        schema:
          type: integer
      - in: query
        name: elevator
        schema:
          type: string
          format: uuid
      - in: query
        name: report_type
        schema:
          type: string
          enum:
          - xlsx
          - docx
          - pdf
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: payment
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - AD
          - BD
          - CD
          - DD
          - FD
          - PA
          - PD
          - PP
          - SD
          - WP
          - WS
      tags:
      - orders
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/payments/:
    get:
      operationId: payments_list
      description: Lists payments
      parameters:
      - in: query
        name: elevator
        description: UUID of elevator.
        schema:
          type: string
          format: uuid
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: status
        description: Payment status.
        schema:
          type: string
          enum:
          - AC
          - AR
      - in: query
        name: type
        description: ID of payment type.
        schema:
          type: integer
      tags:
      - payments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentList'
          description: ''
    post:
      operationId: payments_create
      description: Creates payments
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/v1/payments/{id}/:
    get:
      operationId: payments_retrieve
      description: Retrieves payments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of payment.
        required: true
      tags:
      - payments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    put:
      operationId: payments_update
      description: Puts payments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of payment.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    patch:
      operationId: payments_partial_update
      description: Patches payments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of payment.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPaymentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPaymentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPaymentCreate'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    delete:
      operationId: payments_destroy
      description: Deletes payments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of payment.
        required: true
      tags:
      - payments
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/payments/{id}/status/:
    patch:
      operationId: payments_status_partial_update
      description: Changes status of payments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of payment.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPaymentStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPaymentStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPaymentStatus'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/v1/payments/status/bulk/:
    post:
      operationId: payments_status_create
      description: Changes status of multiple payments
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusIds'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StatusIds'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StatusIds'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/v1/payments/types/:
    get:
      operationId: payments_types_list
      description: Lists payment types
      parameters:
      - in: query
        name: legal_person
        description: Available for legal person?
        schema:
          type: boolean
      - in: query
        name: natural_person
        description: Available for natural person?
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - payments
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentTypeList'
          description: ''
  /api/v1/products/:
    get:
      operationId: products_list
      description: Lists products
      parameters:
      - in: query
        name: elevator
        description: UUID of elevator.
        schema:
          type: string
          format: uuid
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: status
        description: Product status.
        schema:
          type: string
          enum:
          - AC
          - AR
      - in: query
        name: type
        description: ID of product type.
        schema:
          type: integer
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: products_create
      description: Creates products
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCreate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/products/{id}/:
    get:
      operationId: products_retrieve
      description: Retrieves products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of product.
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: products_update
      description: Puts products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCreate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: products_partial_update
      description: Patches products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductCreate'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_destroy
      description: Deletes products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of product.
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/products/{id}/status/:
    patch:
      operationId: products_status_partial_update
      description: Changes tatus of products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductStatus'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/products/no-auth/:
    get:
      operationId: products_no_auth_list
      description: Lists products for all type of users
      parameters:
      - in: query
        name: elevator
        description: UUID of elevator.
        schema:
          type: string
          format: uuid
      - in: query
        name: elevator__cities
        description: ID of city.
        schema:
          type: integer
        explode: true
        style: form
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: type
        description: ID of product type.
        schema:
          type: integer
      tags:
      - products
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
  /api/v1/products/no-auth/{id}/:
    get:
      operationId: products_no_auth_retrieve
      description: Retrieves products for all type of users
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of product.
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/products/no-auth/landing/:
    get:
      operationId: products_no_auth_landing_retrieve
      description: Lists products for landing page
      tags:
      - products
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/products/status/bulk/:
    post:
      operationId: products_status_create
      description: Changes status of multiple products
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusIds'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StatusIds'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StatusIds'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/products/types/:
    get:
      operationId: products_types_list
      description: Lists product types
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - products
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductTypeList'
          description: ''
  /api/v1/support/faq/:
    get:
      operationId: support_faq_list
      description: Lists FAQ
      parameters:
      - in: query
        name: language
        schema:
          type: string
          enum:
          - kk
          - ru
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - faq
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFAQList'
          description: ''
  /api/v1/support/policies/:
    get:
      operationId: support_policies_list
      description: Lists policies
      parameters:
      - in: query
        name: language
        schema:
          type: string
          enum:
          - kk
          - ru
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
          enum:
          - AU
          - PP
          - QA
          - TC
      tags:
      - policies
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPolicyList'
          description: ''
  /api/v1/support/request/:
    post:
      operationId: support_request_create
      description: Creates support tickets
      tags:
      - support
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupportTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupportTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupportTicket'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTicket'
          description: ''
  /api/v1/translations/:
    get:
      operationId: translations_retrieve
      description: Lists translations
      tags:
      - translations
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Translation'
          description: ''
  /api/v1/users/check-code/:
    post:
      operationId: users_check_code_create
      description: Checks SMS code
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserActivate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserActivate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserActivate'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserKey'
          description: ''
  /api/v1/users/clients/:
    get:
      operationId: users_clients_list
      description: Lists clients
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClientList'
          description: ''
  /api/v1/users/login/:
    post:
      operationId: users_login_create
      description: Logins users
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ''
  /api/v1/users/password/change/:
    patch:
      operationId: users_password_change_partial_update
      description: Changes password
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserChangePassword'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
          description: ''
  /api/v1/users/password/reset/:
    post:
      operationId: users_password_reset_create
      description: Resets password
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserResetPassword'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
          description: ''
  /api/v1/users/profile/:
    get:
      operationId: users_profile_retrieve
      description: Retrieves users
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFull'
          description: ''
  /api/v1/users/profile/addresses/:
    get:
      operationId: users_profile_addresses_list
      description: Lists user addresses
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAddressList'
          description: ''
    post:
      operationId: users_profile_addresses_create
      description: Creates user addresses
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddressCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddressCreate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/v1/users/profile/addresses/{id}/:
    get:
      operationId: users_profile_addresses_retrieve
      description: Retrieves user addresses
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of address.
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    put:
      operationId: users_profile_addresses_update
      description: Puts user addresses
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of address.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddressCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddressCreate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    patch:
      operationId: users_profile_addresses_partial_update
      description: Patches user addresses
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of address.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddressCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddressCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddressCreate'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    delete:
      operationId: users_profile_addresses_destroy
      description: Deletes user addresses
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of address.
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/profile/general/:
    get:
      operationId: users_profile_general_retrieve
      description: Retrieves user general info
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_profile_general_update
      description: Puts user general info
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_profile_general_partial_update
      description: Patches user general info
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/profile/notifications/:
    put:
      operationId: users_profile_notifications_update
      description: Puts users notification settings
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserNotification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserNotification'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotification'
          description: ''
    patch:
      operationId: users_profile_notifications_partial_update
      description: Patches users notification settings
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserNotification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserNotification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserNotification'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotification'
          description: ''
  /api/v1/users/profile/requisites/:
    get:
      operationId: users_profile_requisites_list
      description: Lists user requisites
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRequisitesList'
          description: ''
    post:
      operationId: users_profile_requisites_create
      description: Creates user requisites
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Requisites'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Requisites'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Requisites'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Requisites'
          description: ''
  /api/v1/users/profile/requisites/{id}/:
    get:
      operationId: users_profile_requisites_retrieve
      description: Retrieves user requisites
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of requisites.
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Requisites'
          description: ''
    put:
      operationId: users_profile_requisites_update
      description: Puts user requisites
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of requisites.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Requisites'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Requisites'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Requisites'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Requisites'
          description: ''
    patch:
      operationId: users_profile_requisites_partial_update
      description: Patches requisites
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of requisites.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRequisites'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRequisites'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRequisites'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Requisites'
          description: ''
    delete:
      operationId: users_profile_requisites_destroy
      description: Deletes user requisites
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of requisites.
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/register/:
    post:
      operationId: users_register_create
      description: Registers users
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/v1/users/register/activate/:
    post:
      operationId: users_register_activate_create
      description: Activates users
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserActivate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserActivate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserActivate'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ''
  /api/v1/users/send-code/:
    post:
      operationId: users_send_code_create
      description: Sends SMS code. Allowed \'type\:' NA - account activation, RP - password reset
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSendCode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSendCode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSendCode'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
          description: ''
  /api/v1/users/staff/:
    get:
      operationId: users_staff_list
      description: Lists staff
      parameters:
      - in: query
        name: elevator
        description: UUID of elevator.
        schema:
          type: string
          format: uuid
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user_role
        description: User role.
        schema:
          type: string
          enum:
          - AC
          - AR
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStaffList'
          description: ''
    post:
      operationId: users_staff_create
      description: Creates staff
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffCreate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
  /api/v1/users/staff/{id}/:
    get:
      operationId: users_staff_retrieve
      description: Retrieves staff
      parameters:
      - in: path
        name: id
        description: UUID of user.
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
    put:
      operationId: users_staff_update
      description: Puts staff
      parameters:
      - in: path
        name: id
        description: UUID of user.
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffCreate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
    patch:
      operationId: users_staff_partial_update
      description: Patches staff
      parameters:
      - in: path
        name: id
        description: UUID of user.
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaffCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaffCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaffCreate'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
    delete:
      operationId: users_staff_destroy
      description: Deletes staff
      parameters:
      - in: path
        name: id
        description: UUID of user.
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/staff/bulk/:
    post:
      operationId: users_staff_bulk_create
      description: Deletes multiple staff
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffIds'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffIds'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffIds'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        city:
          $ref: '#/components/schemas/City'
        address:
          type: string
          maxLength: 255
      required:
      - address
      - city
      - id
    AddressCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        city:
          type: integer
        address:
          type: string
          maxLength: 255
      required:
      - address
      - city
      - id
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    BlankEnum:
      enum:
      - ''
    City:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title_ru:
          type: string
          maxLength: 32
        title_kk:
          type: string
          maxLength: 32
        district:
          allOf:
          - $ref: '#/components/schemas/District'
          readOnly: true
      required:
      - district
      - id
      - title_kk
      - title_ru
    Client:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 16
        first_name:
          type: string
          maxLength: 128
        user_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/UserTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        email:
          type: string
        phone_number:
          type: string
        image:
          type: string
          readOnly: true
      required:
      - id
      - image
      - phone_number
      - username
    CloudMessageTypeEnum:
      enum:
      - FCM
      - GCM
      type: string
    Const:
      type: object
      properties:
        const:
          type: string
      required:
      - const
    Delivery:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          allOf:
          - $ref: '#/components/schemas/DeliveryType'
          readOnly: true
        title_ru:
          type: string
          nullable: true
          maxLength: 128
        title_kk:
          type: string
          nullable: true
          maxLength: 128
        price:
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
        elevator:
          allOf:
          - $ref: '#/components/schemas/Elevator'
          readOnly: true
      required:
      - elevator
      - id
      - price
      - type
    DeliveryCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: integer
        title_ru:
          type: string
          nullable: true
          maxLength: 128
        title_kk:
          type: string
          nullable: true
          maxLength: 128
        price:
          type: integer
        elevator:
          type: string
          format: uuid
      required:
      - elevator
      - id
      - price
      - type
    DeliveryList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          allOf:
          - $ref: '#/components/schemas/DeliveryType'
          readOnly: true
        title_ru:
          type: string
          nullable: true
          maxLength: 128
        title_kk:
          type: string
          nullable: true
          maxLength: 128
        price:
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
      required:
      - id
      - price
      - type
    DeliveryType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title_ru:
          type: string
          maxLength: 32
        title_kk:
          type: string
          maxLength: 32
      required:
      - id
      - title_kk
      - title_ru
    District:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title_ru:
          type: string
          maxLength: 32
        title_kk:
          type: string
          maxLength: 32
      required:
      - id
      - title_kk
      - title_ru
    Document:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          allOf:
          - $ref: '#/components/schemas/DocumentTypeEnum'
        document:
          type: string
          format: uri
      required:
      - document
      - id
      - order
      - type
    DocumentCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          $ref: '#/components/schemas/DocumentTypeEnum'
        document:
          type: string
          format: uri
        order:
          type: integer
      required:
      - document
      - id
      - order
      - type
    DocumentTypeEnum:
      enum:
      - PS
      - WB
      - BL
      type: string
    Elevator:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title_ru:
          type: string
          maxLength: 128
        title_kk:
          type: string
          maxLength: 128
        address_ru:
          type: string
          nullable: true
          maxLength: 255
        address_kk:
          type: string
          nullable: true
          maxLength: 255
        phone_number:
          type: string
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 300
        logo:
          type: string
          format: uri
          nullable: true
        slug:
          type: string
          readOnly: true
      required:
      - id
      - slug
      - title_kk
      - title_ru
    ElevatorFull:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title_ru:
          type: string
          maxLength: 128
        title_kk:
          type: string
          maxLength: 128
        address_ru:
          type: string
          nullable: true
          maxLength: 255
        address_kk:
          type: string
          nullable: true
          maxLength: 255
        phone_number:
          type: string
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 300
        logo:
          type: string
          format: uri
          nullable: true
        slug:
          type: string
          readOnly: true
        description_ru:
          type: string
          nullable: true
        description_kk:
          type: string
          nullable: true
        bin:
          type: string
          maxLength: 80
        bik:
          type: string
          maxLength: 80
        checking_account:
          type: string
          maxLength: 128
        railway_station:
          type: integer
        cities:
          type: array
          items:
            type: integer
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductList'
          readOnly: true
        deliveries:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryList'
          readOnly: true
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentList'
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          readOnly: true
      required:
      - bik
      - bin
      - checking_account
      - cities
      - deliveries
      - id
      - owner
      - payments
      - products
      - railway_station
      - slug
      - title_kk
      - title_ru
    ElevatorGeneral:
      type: object
      properties:
        orders:
          type: integer
        orders_FD:
          type: integer
        profit:
          type: integer
      required:
      - orders
      - orders_FD
      - profit
    ElevatorOrder:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title_ru:
          type: string
          readOnly: true
        title_kk:
          type: string
          readOnly: true
        AD:
          type: string
          readOnly: true
        BD:
          type: string
          readOnly: true
        PD:
          type: string
          readOnly: true
      required:
      - AD
      - BD
      - PD
      - id
      - title_kk
      - title_ru
    ElevatorProfit:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title_ru:
          type: string
          readOnly: true
        title_kk:
          type: string
          readOnly: true
        profits:
          type: array
          items:
            $ref: '#/components/schemas/Profit'
          readOnly: true
      required:
      - id
      - profits
      - title_kk
      - title_ru
    FAQ:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageEnum'
        qa:
          type: array
          items:
            $ref: '#/components/schemas/QA'
          readOnly: true
      required:
      - id
      - qa
    GCMDevice:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: true
          maxLength: 255
        registration_id:
          type: string
        device_id:
          type: integer
          nullable: true
          description: 'ANDROID_ID / TelephonyManager.getDeviceId() (e.g: 0x01)'
        active:
          type: boolean
          description: Inactive devices will not be sent notifications
        date_created:
          type: string
          format: date-time
          readOnly: true
        cloud_message_type:
          allOf:
          - $ref: '#/components/schemas/CloudMessageTypeEnum'
          description: You should choose FCM or GCM
        application_id:
          type: string
          nullable: true
          description: Opaque application identity, should be filled in for multiple
            key/certificate access
          maxLength: 64
      required:
      - date_created
      - registration_id
    LanguageEnum:
      enum:
      - ru
      - kk
      type: string
    Notification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 255
        content:
          type: string
          maxLength: 255
        read:
          type: boolean
        order_status:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - order_status
    NotificationDateless:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 255
        content:
          type: string
          maxLength: 255
        read:
          type: boolean
        order_status:
          type: string
          readOnly: true
      required:
      - id
      - order_status
    NotificationGrouped:
      type: object
      properties:
        created_at:
          type: string
          format: date
          readOnly: true
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/NotificationDateless'
          readOnly: true
      required:
      - created_at
      - notifications
    NotificationHistory:
      type: object
      properties:
        title:
          type: string
          nullable: true
          maxLength: 255
        content:
          type: string
          maxLength: 255
    NotificationIds:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
      required:
      - ids
    NotificationUnread:
      type: object
      properties:
        unread:
          type: integer
      required:
      - unread
    NullEnum:
      enum:
      - null
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        client:
          allOf:
          - $ref: '#/components/schemas/Client'
          readOnly: true
        elevator:
          allOf:
          - $ref: '#/components/schemas/Elevator'
          readOnly: true
        products:
          allOf:
          - $ref: '#/components/schemas/OrderItem'
          readOnly: true
        delivery:
          allOf:
          - $ref: '#/components/schemas/DeliveryList'
          readOnly: true
        payment:
          allOf:
          - $ref: '#/components/schemas/PaymentList'
          readOnly: true
        city:
          $ref: '#/components/schemas/City'
          readOnly: true
        address:
          type: string
          maxLength: 255
          readOnly: true
        title:
          type: string
          maxLength: 255
        bin:
          type: string
          maxLength: 80
        bik:
          type: string
          maxLength: 80
        checking_account:
          type: string
          maxLength: 128
        delivery_payment:
          type: integer
        proxy_fullname:
          type: string
          nullable: true
          maxLength: 255
        proxy_number:
          type: integer
        proxy_start_date:
          type: string
          format: date
          nullable: true
        proxy_end_date:
          type: string
          format: date
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/OrderStatusEnum'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        number:
          type: string
          maxLength: 9
      required:
      - address
      - bik
      - bin
      - city
      - checking_account
      - client
      - created_at
      - delivery
      - delivery_payment
      - documents
      - elevator
      - id
      - number
      - payment
      - products
      - proxy_number
      - title
      - updated_at
    OrderCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        client:
          type: string
          format: uuid
        elevator:
          type: string
          format: uuid
        products:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/OrderItemCreate'
        delivery:
          type: integer
        payment:
          type: integer
        city:
          type: integer
        address:
          type: string
          maxLength: 255
        title:
          type: string
          maxLength: 255
        bin:
          type: string
          maxLength: 80
        bik:
          type: string
          maxLength: 80
        checking_account:
          type: string
          maxLength: 128
        delivery_payment:
          type: integer
      required:
      - amount
      - delivery
      - delivery_payment
      - elevator
      - id
      - payment
      - product
      - product_payment
    OrderIds:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
      required:
      - ids
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/ProductList'
          readOnly: true
        amount:
          type: integer
        product_payment:
          type: integer
      required:
      - amount
      - id
      - product
      - product_payment
    OrderItemCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        amount:
          type: integer
        product_payment:
          type: integer
      required:
      - amount
      - id
      - product
      - product_payment
    OrderPatch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        client:
          type: string
          format: uuid
        elevator:
          type: string
          format: uuid
        delivery:
          type: integer
        payment:
          type: integer
        railway_station:
          type: integer
        city:
          type: integer
        address:
          type: string
          nullable: true
          maxLength: 255
        title:
          type: string
          nullable: true
          maxLength: 255
        bin:
          type: string
          nullable: true
          maxLength: 80
        bik:
          type: string
          nullable: true
          maxLength: 80
        checking_account:
          type: string
          nullable: true
          maxLength: 128
        delivery_payment:
          type: integer
      required:
      - delivery_payment
      - elevator
      - id
    OrderSingle:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        client:
          allOf:
          - $ref: '#/components/schemas/Client'
          readOnly: true
        elevator:
          allOf:
          - $ref: '#/components/schemas/Elevator'
          readOnly: true
        products:
          allOf:
          - $ref: '#/components/schemas/OrderItem'
          readOnly: true
        delivery:
          allOf:
          - $ref: '#/components/schemas/DeliveryList'
          readOnly: true
        payment:
          allOf:
          - $ref: '#/components/schemas/PaymentList'
          readOnly: true
        city:
          $ref: '#/components/schemas/City'
          readOnly: true
        address:
          type: string
          maxLength: 255
          readOnly: true
        title:
          type: string
          maxLength: 255
        bin:
          type: string
          maxLength: 80
        bik:
          type: string
          maxLength: 80
        checking_account:
          type: string
          maxLength: 128
        delivery_payment:
          type: integer
        proxy_fullname:
          type: string
          nullable: true
          maxLength: 255
        proxy_number:
          type: integer
        proxy_start_date:
          type: string
          format: date
          nullable: true
        proxy_end_date:
          type: string
          format: date
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/OrderStatusEnum'
          title: Статус
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        number:
          type: string
          maxLength: 9
        history:
          type: array
          items:
            $ref: '#/components/schemas/NotificationHistory'
          readOnly: true
      required:
      - address
      - amount
      - bin
      - bik
      - city
      - checking_account
      - client
      - created_at
      - delivery
      - delivery_payment
      - documents
      - elevator
      - history
      - id
      - number
      - payment
      - product
      - product_payment
      - proxy_number
      - title
      - updated_at
    Owner:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 16
        first_name:
          type: string
          maxLength: 128
      required:
      - id
      - username
    PaginatedAddressList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        page_count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/Address'
    PaginatedCityList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        page_count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/City'
    PaginatedClientList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Client'
    PaginatedDeliveryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        page_count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/Delivery'
    PaginatedDeliveryTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        page_count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryType'
    PaginatedElevatorFullList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        page_count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/ElevatorFull'
    PaginatedElevatorGeneralList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ElevatorGeneral'
    PaginatedElevatorOrderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ElevatorOrder'
    PaginatedElevatorProfitList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/ElevatorProfit'
    PaginatedFAQList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        page_count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/FAQ'
    PaginatedGCMDeviceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        page_count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/GCMDevice'
    PaginatedNotificationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        page_count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PaginatedNotificationGroupedList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationGrouped'
    PaginatedOrderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        page_count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedPaymentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        page_count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    PaginatedPaymentTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        page_count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentType'
    PaginatedPolicyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        page_count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/Policy'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        page_count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedProductTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        page_count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductType'
    PaginatedRailwayStationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        page_count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/RailwayStation'
    PaginatedRequisitesList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        page_count:
          type: integer
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/Requisites'
    PaginatedStaffList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Staff'
    PatchedAddressCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        city:
          type: integer
        address:
          type: string
          maxLength: 255
    PatchedDeliveryCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: integer
        title_ru:
          type: string
          nullable: true
          maxLength: 128
        title_kk:
          type: string
          nullable: true
          maxLength: 128
        price:
          type: integer
        elevator:
          type: string
          format: uuid
    PatchedDeliveryStatus:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
    PatchedDocumentCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          $ref: '#/components/schemas/DocumentTypeEnum'
        document:
          type: string
          format: uri
        order:
          type: integer
    PatchedElevatorFull:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title_ru:
          type: string
          maxLength: 128
        title_kk:
          type: string
          maxLength: 128
        address_ru:
          type: string
          nullable: true
          maxLength: 255
        address_kk:
          type: string
          nullable: true
          maxLength: 255
        phone_number:
          type: string
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 300
        logo:
          type: string
          format: uri
          nullable: true
        slug:
          type: string
          readOnly: true
        description_ru:
          type: string
          nullable: true
        description_kk:
          type: string
          nullable: true
        bin:
          type: string
          maxLength: 80
        bik:
          type: string
          maxLength: 80
        checking_account:
          type: string
          maxLength: 128
        railway_station:
          type: integer
        cities:
          type: array
          items:
            type: integer
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductList'
          readOnly: true
        deliveries:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryList'
          readOnly: true
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentList'
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          readOnly: true
    PatchedGCMDevice:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: true
          maxLength: 255
        registration_id:
          type: string
        device_id:
          type: integer
          nullable: true
          description: 'ANDROID_ID / TelephonyManager.getDeviceId() (e.g: 0x01)'
        active:
          type: boolean
          description: Inactive devices will not be sent notifications
        date_created:
          type: string
          format: date-time
          readOnly: true
        cloud_message_type:
          allOf:
          - $ref: '#/components/schemas/CloudMessageTypeEnum'
          description: You should choose FCM or GCM
        application_id:
          type: string
          nullable: true
          description: Opaque application identity, should be filled in for multiple
            key/certificate access
          maxLength: 64
    PatchedOrderCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        client:
          type: string
          format: uuid
        elevator:
          type: string
          format: uuid
        products:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/OrderItemCreate'
        delivery:
          type: integer
        payment:
          type: integer
        city:
          type: integer
        address:
          type: string
          maxLength: 255
        title:
          type: string
          maxLength: 255
        bin:
          type: string
          maxLength: 80
        bik:
          type: string
          maxLength: 80
        checking_account:
          type: string
          maxLength: 128
        delivery_payment:
          type: integer
    PatchedOrderProxy:
      type: object
      properties:
        proxy_fullname:
          type: string
        proxy_number:
          type: integer
        proxy_start_date:
          type: string
          format: date
        proxy_end_date:
          type: string
          format: date
    PatchedOrderStatus:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/OrderStatusEnum'
        products:
          allOf:
          - $ref: '#/components/schemas/OrderItem'
          readOnly: true
    PatchedPaymentCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: integer
        minutes:
          type: integer
        elevator:
          type: string
          format: uuid
    PatchedPaymentStatus:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
    PatchedProductCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        set_number:
          type: string
          maxLength: 128
        type:
          type: integer
        price:
          type: integer
        min_limit:
          type: integer
        max_limit:
          type: integer
        residue:
          type: integer
        image:
          type: string
          format: uri
          nullable: true
        elevator:
          type: string
          format: uuid
    PatchedProductStatus:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
    PatchedRequisites:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        bin:
          type: string
          maxLength: 80
        bik:
          type: string
          maxLength: 80
        checking_account:
          type: string
          maxLength: 128
    PatchedStaffCreate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 128
        email:
          type: string
        phone_number:
          type: string
        elevator:
          type: string
        user_role:
          allOf:
          - $ref: '#/components/schemas/UserRoleEnum'
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 16
        first_name:
          type: string
          maxLength: 128
        user_type:
          allOf:
          - $ref: '#/components/schemas/UserTypeEnum'
          readOnly: true
        email:
          type: string
        phone_number:
          type: string
        image:
          type: string
          readOnly: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        requisites:
          type: array
          items:
            $ref: '#/components/schemas/Requisites'
        user_role:
          allOf:
          - $ref: '#/components/schemas/UserRoleEnum'
          readOnly: true
    PatchedUserChangePassword:
      type: object
      properties:
        old_password:
          type: string
        new_password:
          type: string
    PatchedUserNotification:
      type: object
      properties:
        notifications_sms:
          type: boolean
        notifications_email:
          type: boolean
    Payment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          allOf:
          - $ref: '#/components/schemas/PaymentType'
          readOnly: true
        minutes:
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
        elevator:
          allOf:
          - $ref: '#/components/schemas/Elevator'
          readOnly: true
      required:
      - elevator
      - id
      - minutes
      - type
    PaymentCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: integer
        minutes:
          type: integer
        elevator:
          type: string
          format: uuid
      required:
      - elevator
      - id
      - minutes
      - type
    PaymentList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          allOf:
          - $ref: '#/components/schemas/PaymentType'
          readOnly: true
        minutes:
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
      required:
      - id
      - minutes
      - type
    PaymentType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title_ru:
          type: string
          maxLength: 32
        title_kk:
          type: string
          maxLength: 32
        natural_person:
          type: boolean
        legal_person:
          type: boolean
      required:
      - id
      - title_kk
      - title_ru
    Policy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          allOf:
          - $ref: '#/components/schemas/PolicyTypeEnum'
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageEnum'
          default: ru
        policy:
          type: array
          items:
            $ref: '#/components/schemas/PolicySubsection'
          readOnly: true
      required:
      - id
      - policy
      - type
    PolicySubsection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 255
        content:
          type: string
      required:
      - content
      - id
    PolicyTypeEnum:
      enum:
      - PP
      - TC
      - AU
      type: string
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        set_number:
          type: string
          maxLength: 128
        type:
          allOf:
          - $ref: '#/components/schemas/ProductType'
          readOnly: true
        price:
          type: integer
        min_limit:
          type: integer
        max_limit:
          type: integer
        residue:
          type: integer
        image:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
        elevator:
          allOf:
          - $ref: '#/components/schemas/Elevator'
          readOnly: true
      required:
      - elevator
      - id
      - image
      - max_limit
      - min_limit
      - price
      - residue
      - set_number
      - type
    ProductCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        set_number:
          type: string
          maxLength: 128
        type:
          type: integer
        price:
          type: integer
        min_limit:
          type: integer
        max_limit:
          type: integer
        residue:
          type: integer
        image:
          type: string
          format: uri
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
        elevator:
          type: string
          format: uuid
      required:
      - elevator
      - id
      - max_limit
      - min_limit
      - price
      - residue
      - set_number
      - type
    ProductList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        set_number:
          type: string
          maxLength: 128
        type:
          allOf:
          - $ref: '#/components/schemas/ProductType'
          readOnly: true
        price:
          type: integer
        min_limit:
          type: integer
        max_limit:
          type: integer
        residue:
          type: integer
        image:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
      required:
      - id
      - max_limit
      - price
      - residue
      - set_number
      - type
    ProductType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title_ru:
          type: string
          maxLength: 32
        title_kk:
          type: string
          maxLength: 32
      required:
      - id
      - title_kk
      - title_ru
    Profit:
      type: object
      properties:
        created_at:
          type: string
          format: date
          readOnly: true
        profit:
          type: integer
      required:
      - created_at
      - profit
    QA:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        question:
          type: string
          maxLength: 255
        answer:
          type: string
      required:
      - answer
      - id
      - question
    RailwayStation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title_ru:
          type: string
          maxLength: 64
        title_kk:
          type: string
          maxLength: 64
        description_ru:
          type: string
          nullable: true
          maxLength: 255
        description_kk:
          type: string
          nullable: true
          maxLength: 255
        code:
          type: string
          nullable: true
          maxLength: 8
      required:
      - id
      - title_kk
      - title_ru
    Requisites:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        bin:
          type: string
          maxLength: 80
        bik:
          type: string
          maxLength: 80
        checking_account:
          type: string
          maxLength: 128
      required:
      - bik
      - bin
      - checking_account
      - id
      - title
    Staff:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
        first_name:
          type: string
        email:
          type: string
          readOnly: true
        phone_number:
          type: string
        elevators:
          type: array
          items:
            type: string
          readOnly: true
        user_role:
          allOf:
          - $ref: '#/components/schemas/UserRoleEnum'
      required:
      - elevators
      - email
      - first_name
      - id
      - phone_number
      - username
    StaffCreate:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 128
        email:
          type: string
        phone_number:
          type: string
        elevator:
          type: string
        user_role:
          allOf:
          - $ref: '#/components/schemas/UserRoleEnum'
      required:
      - elevator
      - phone_number
    StaffIds:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
      required:
      - ids
    StatusEnum:
      enum:
      - AC
      - AR
      type: string
    OrderStatusEnum:
      enum:
      - AD
      - WP
      - WS
      - BD
      - PP
      - PD
      - PA
      - SD
      - DD
      - CD
      - FD
      type: string
    StatusIds:
      type: object
      properties:
        status:
          type: string
        ids:
          type: array
          items:
            type: integer
      required:
      - ids
      - status
    Success:
      type: object
      properties:
        success:
          type: boolean
      required:
      - success
    SupportTicket:
      type: object
      properties:
        content:
          type: string
      required:
      - content
    Translation:
      type: object
      properties:
        language:
          type: array
          items:
            $ref: '#/components/schemas/Const'
          readOnly: true
      required:
      - language
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 16
        first_name:
          type: string
          maxLength: 128
        user_type:
          allOf:
          - $ref: '#/components/schemas/UserTypeEnum'
          readOnly: true
        email:
          type: string
        phone_number:
          type: string
        image:
          type: string
          readOnly: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        requisites:
          type: array
          items:
            $ref: '#/components/schemas/Requisites'
        user_role:
          allOf:
          - $ref: '#/components/schemas/UserRoleEnum'
          readOnly: true
      required:
      - addresses
      - email
      - id
      - image
      - requisites
      - user_role
      - user_type
      - username
    UserActivate:
      type: object
      properties:
        username:
          type: string
        code:
          type: string
      required:
      - code
      - username
    UserCreate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 128
      required:
      - id
      - first_name
      - password
      - username
    UserFull:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          readOnly: true
        first_name:
          type: string
          maxLength: 128
          readOnly: true
        user_type:
          allOf:
          - $ref: '#/components/schemas/UserTypeEnum'
          readOnly: true
        email:
          type: string
          readOnly: true
        phone_number:
          type: string
          readOnly: true
        image:
          type: string
          readOnly: true
        notifications_sms:
          type: boolean
          readOnly: true
        notifications_email:
          type: boolean
          readOnly: true
        user_role:
          allOf:
          - $ref: '#/components/schemas/UserRoleEnum'
          readOnly: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          readOnly: true
        requisites:
          type: array
          items:
            $ref: '#/components/schemas/Requisites'
          readOnly: true
      required:
      - addresses
      - email
      - id
      - image
      - phone_number
      - requisites
      - user_role
      - user_type
      - username
    UserKey:
      type: object
      properties:
        key:
          type: string
          readOnly: true
      required:
      - key
    UserNotification:
      type: object
      properties:
        notifications_sms:
          type: boolean
        notifications_email:
          type: boolean
    UserResetPassword:
      type: object
      properties:
        key:
          type: string
        new_password:
          type: string
      required:
      - key
      - new_password
    UserResponse:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        token:
          type: string
      required:
      - token
      - user
    UserRoleEnum:
      enum:
      - OW
      - AC
      - AR
      - CL
      type: string
    UserSendCode:
      type: object
      properties:
        username:
          type: string
        type:
          type: string
      required:
      - type
      - username
    UserTypeEnum:
      enum:
      - AN
      - NP
      - LP
      type: string
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
