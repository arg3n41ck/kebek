# Generated by Django 2.2.12 on 2021-11-30 14:15

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('management', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accountant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Cart',
                'verbose_name_plural': 'Cart',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(verbose_name='Amount')),
                ('product_payment', models.PositiveIntegerField(verbose_name='Product payment')),
                ('pre_payment', models.PositiveIntegerField(blank=True, null=True, verbose_name='Prepayment')),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Price')),
            ],
            options={
                'verbose_name': 'Delivery',
                'verbose_name_plural': 'Deliveries',
                'ordering': ['elevator__title_ru'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('PS', 'Pass'), ('WB', 'Waybill'), ('BL', 'Bill')], default='PS', max_length=2, verbose_name='Type')),
                ('document', models.FileField(upload_to='documents/', verbose_name='Document')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
            },
        ),
        migrations.CreateModel(
            name='Elevator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title_ru', models.CharField(max_length=128, verbose_name='Russian title')),
                ('title_kk', models.CharField(max_length=128, verbose_name='Kazakh title')),
                ('address_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='Russian address')),
                ('address_kk', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kazakh address')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('website', models.URLField(blank=True, max_length=300, null=True, verbose_name='Website')),
                ('bin', models.CharField(max_length=80, verbose_name='BIN')),
                ('checking_account', models.CharField(max_length=128, verbose_name='Checking account')),
            ],
            options={
                'verbose_name': 'Elevator',
                'verbose_name_plural': 'Elevators',
                'ordering': ['title_ru'],
            },
        ),
        migrations.CreateModel(
            name='Geolocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', django.contrib.gis.db.models.fields.PointField(srid=3857, verbose_name='Position')),
                ('created_at', models.DateTimeField(verbose_name='Created at')),
            ],
            options={
                'verbose_name': 'Geolocation',
                'verbose_name_plural': 'Geolocations',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(verbose_name='Amount')),
                ('product_payment', models.PositiveIntegerField(verbose_name='Product payment')),
                ('delivery_payment', models.PositiveIntegerField(verbose_name='Delivery payment')),
                ('pre_payment', models.PositiveIntegerField(blank=True, null=True, verbose_name='Prepayment')),
                ('proxy_fullname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Proxy fullname')),
                ('proxy_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Proxy number')),
                ('proxy_start_date', models.DateField(blank=True, null=True, verbose_name='Proxy start date')),
                ('proxy_end_date', models.DateField(blank=True, null=True, verbose_name='Proxy end date')),
                ('status', models.CharField(choices=[('AD', 'Accepted'), ('WP', 'Waiting for prepayment'), ('WS', 'Waiting for supplement'), ('BD', 'Billed'), ('PP', 'Prepayment received'), ('PD', 'Paid'), ('PA', 'Proxy added'), ('SD', 'Shipped'), ('DD', 'Delivered'), ('CD', 'Cancelled'), ('FD', 'Finished')], default='AD', max_length=2, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('elevator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_elevator', to='elevators.Elevator', verbose_name='Elevator')),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'ordering': ['elevator__title_ru'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(verbose_name='Price')),
                ('min_limit', models.PositiveIntegerField(blank=True, null=True, verbose_name='Minimum limit')),
                ('max_limit', models.PositiveIntegerField(verbose_name='Maximum limit')),
                ('residue', models.PositiveIntegerField(verbose_name='Residue')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/products/', verbose_name='Image')),
                ('elevator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_elevator', to='elevators.Elevator', verbose_name='Elevator')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_type', to='management.ProductType', verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['elevator__title_ru'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minutes', models.PositiveIntegerField(default=0, verbose_name='Minutes until cancellation')),
                ('elevator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_elevator', to='elevators.Elevator', verbose_name='Elevator')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payment_type', to='management.PaymentType', verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['elevator__title_ru'],
            },
        ),
    ]
