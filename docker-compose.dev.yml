version: '3.7'

services:
  redis:
    image: redis:latest
    container_name: redis_server
    command: redis-server --appendonly yes
    ports:
      - '6379:6379'
    networks:
      - my-network

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - my-network
    env_file:
      - ./.env

  backend:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    volumes:
      - static_volume:/app/backend/src/static
      - media_volume:/app/backend/media
    entrypoint: /app/docker/backend/wsgi-entrypoint.sh
    networks:
      - my-network
    depends_on:
      - db
      - redis
    env_file:
      - ./.env

  memcached:
    image: memcached:1.6.5
    expose:
      - 11211
    networks:
      - my-network

  celery:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    container_name: celery_worker
    command: bash -c "celery -A kebek worker -Q kebek_celerybeat, kebek_elevators -c 4 -n kebek_worker -l INFO"
    networks:
      - my-network
    depends_on:
      - redis
    restart: always

  celery_beat:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    container_name: celery_beat
    command: bash -c "celery -A kebek beat -l INFO --pidfile= --schedule=/tmp/celerybeat-schedule"
    networks:
      - my-network
    depends_on:
      - redis
    restart: always

  nginx:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - 8000:80
    volumes:
      - ./docker/nginx/dev:/etc/nginx/conf.d
      - static_volume:/app/backend/static
      - media_volume:/app/backend/media
    networks:
      - my-network
    depends_on:
      - db
      - backend

volumes:
  static_volume:
  postgres_data:
  media_volume:

networks:
  my-network:
